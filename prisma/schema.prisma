// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id         Int     @id @default(autoincrement())
  nome       String
  email      String  @unique
  senha      String
  cargo      String // Ex: "lider", Desenvolvedor ou outro e etc...
  fotoPerfil String?

  projetoetosLiderados Projeto[] @relation("LiderProjetos")

  tarefasAtribuidas Tarefa[]
  Comentario        Comentario[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("usuarios")
}

model Projeto {
  id          Int      @id @default(autoincrement())
  nome        String
  descricao   String?
  dataCriacao DateTime @default(now())

  liderId Int
  lider   Usuario @relation("LiderProjetos", fields: [liderId], references: [id]) // Relaciona ao lider do projeto

  tarefas Tarefa[]

  create_at  DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("projetos")
}

model Tarefa {
  id          Int        @id @default(autoincrement())
  titulo      String
  descricao   String?
  status      Status     @default(A_FAZER) // EM PROGRESSO, CONCLUIDO
  prioridade  prioridade @default(MEDIA) // BAIXA, MEDIA, ALTA
  dataEntrega DateTime?

  projetoId Int
  projeto   Projeto @relation(fields: [projetoId], references: [id])

  responsavelId Int?
  responsavel   Usuario? @relation(fields: [responsavelId], references: [id]) // Usu√°rio responsavel

  comentarios Comentario[]

  // timetamps

  creatd_at  DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("tarefas")
}

model Comentario {
  id          Int      @id @default(autoincrement())
  texto       String
  dataCriacao DateTime @default(now())

  autorId Int
  autor   Usuario @relation(fields: [autorId], references: [id])

  tarefaId Int
  tarefa   Tarefa @relation(fields: [tarefaId], references: [id])

  // timestamps

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("comentarios")
}

enum Status {
  A_FAZER
  EM_PROGRESSO
  CONCLUIDO
}

enum prioridade {
  BAIXA
  MEDIA
  ALTA
}
